name: Documentation

on:
  pull_request:
  push:
    branches: main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    # Force to use color
    FORCE_COLOR: true
    BROWSER: /usr/bin/firefox
    DISPLAY: :99.0
    
permissions:
  contents: write

jobs:
  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
            python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install -e .
          python -m pip install .[doc,plotting]
      - name: Sphinx build
        id: build-docs
        run: |
          cd doc_conf; make html-noplot
      - name: Upload documentation
        if: steps.build-docs.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: DocHTML
          path: doc_conf/_build/html

  deploy_on_main:
    runs-on: ubuntu-latest
    needs: [build_docs]
    if: ${{ contains(fromJSON('["push", "workflow_dispatch", "schedule"]'), github.event_name)}}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: DocHTML
          path: doc/_build/html
      - name: Commit to main
        run: |
          git clone --depth 1 https://github.com/${{ github.repository_owner }}/hidimstat.git
          rm -Rf hidimstat/docs
          mkdir hidimstat/docs
          cp -r doc/_build/html/* hidimstat/docs
          cd hidimstat
          touch docs/.nojekyll
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub actions"
          git add .
          git commit -m "Update documentation" -a || true
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          directory: hidimstat
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
  deploy_documentation:
    name: Deploy documentation  
    runs-on: ubuntu-latest
    needs: [build_docs]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.ACTIONS_SSH_DEPLOY }}" > ~/.ssh/github_actions
          chmod 600 ~/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/github_actions

      - uses: actions/download-artifact@v4
        with:
          name: DocHTML
          path: doc/_build/html

      - name: deploy
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          COMMIT_SHA: ${{ github.event.head_commit.id }}
        run: |
          export ORGANIZATION="lionelkusch"
          export DOC_REPO="lionelkusch.github.io"
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub actions"
          ./build_tools/circle/push_doc.sh doc/_build/html

  push:
    runs-on: ubuntu-latest
    # Run the job only if the "DocumentationBuilder" workflow succeeded
    # Prevents this workflow from running on a fork.
    # To test this workflow on a fork remove the `github.repository == nilearn/nilearn` condition
    needs: [build_docs]
    steps:
    -   name: Trigger hosting job on circle ci
        run: |
            echo ${{ github.event}}
            echo ${{ github.api_url}}
            echo ${{ github.event.commits.id}}
            echo ${{ github.event.workflow.head_sha}}
            COMMIT_SHA=${GITHUB_SHA}
            REPO_NAME=${{ github.event.repository }}
            echo "${{ github.api_url}}/repos/${{github.repository}}/commits/${{github.sha}}/pulls"

            PULL_REQUEST_NUMBER=$(curl \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "${{ github.api_url}}/${{github.repository}}/commits/${{github.sha}}/pulls" 2>/dev/null \
                | jq '.[0].number')
            echo $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            echo $PULL_REQUEST_NUMBER
            echo $(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')

            if [[ "$PULL_REQUEST_NUMBER" == "null" ]]; then
                # The pull request is on the main (default) branch of the fork.
                # The above API call is unable to get the PR number associated with the commit:
                # https://docs.github.com/en/rest/commits/commits#list-pull-requests-associated-with-a-commit
                # We fallback to the search API here.
                # The search API is not used every time because it has a lower rate limit.
                PULL_REQUEST_NUMBER=$(curl \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                      "https://api.github.com/search/issues?q=$COMMIT_SHA+repo:${{ github.repository }}" 2>/dev/null \
                      | jq '.items[0].number')
            fi

            BRANCH=pull/$PULL_REQUEST_NUMBER/head

            GITHUB_RUN_URL="https://nightly.link/${{ github.repository }}/actions/runs/${{ github.event.workflow.id }}"

            curl --request POST \
            --url https://circleci.com/api/v2/project/gh/${{ github.repository }}/pipeline \
            --header "Circle-Token: ${{ secrets.CIRCLE_CI_TOKEN }}" \
            --header "content-type: application/json" \
            --header "x-attribution-actor-id: github_actions" \
            --header "x-attribution-login: github_actions" \
            --data \{\"branch\":\"$BRANCH\",\"parameters\":\{\"GITHUB_RUN_URL\":\"$GITHUB_RUN_URL\"\}\}